[{"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx":"1","C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx":"2","C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx":"3","C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx":"4","C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx":"5","C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js":"6","C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx":"7","C:\\Users\\USER\\react_calendar\\src\\App.js":"8","C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx":"9","C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx":"10","C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js":"11","C:\\Users\\USER\\react_calendar\\src\\index.js":"12","C:\\Users\\USER\\react_calendar\\src\\service\\repository.js":"13","C:\\Users\\USER\\react_calendar\\src\\service\\auth.js":"14","C:\\Users\\USER\\react_calendar\\src\\component\\makeDateList\\makeDateList.jsx":"15","C:\\Users\\USER\\react_calendar\\src\\component\\linkButton\\linkButton.jsx":"16","C:\\Users\\USER\\react_calendar\\src\\component\\slideCalendar\\slideCalendar.jsx":"17"},{"size":1500,"mtime":1615208008541,"results":"18","hashOfConfig":"19"},{"size":1077,"mtime":1614952867211,"results":"20","hashOfConfig":"19"},{"size":5225,"mtime":1615289691994,"results":"21","hashOfConfig":"19"},{"size":1738,"mtime":1614955401631,"results":"22","hashOfConfig":"19"},{"size":2281,"mtime":1615443477381,"results":"23","hashOfConfig":"19"},{"size":820,"mtime":1614308745901,"results":"24","hashOfConfig":"19"},{"size":4342,"mtime":1615205801473,"results":"25","hashOfConfig":"19"},{"size":665,"mtime":1614153142571,"results":"26","hashOfConfig":"19"},{"size":979,"mtime":1615290458604,"results":"27","hashOfConfig":"19"},{"size":245,"mtime":1614953582370,"results":"28","hashOfConfig":"19"},{"size":416,"mtime":1614069234901,"results":"29","hashOfConfig":"19"},{"size":355,"mtime":1615430527048,"results":"30","hashOfConfig":"19"},{"size":612,"mtime":1615214099126,"results":"31","hashOfConfig":"19"},{"size":1552,"mtime":1615443762806,"results":"32","hashOfConfig":"19"},{"size":377,"mtime":1614953521197,"results":"33","hashOfConfig":"19"},{"size":317,"mtime":1614953876567,"results":"34","hashOfConfig":"19"},{"size":693,"mtime":1615209103004,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ka7mz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx",[],["81","82"],"C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx",["83","84"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ClickDate from \"../clickDate/clickDate\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport styles from \"./calendar.module.css\";\nimport ShowDate from \"../showDate/showDate\";\nimport MakeCalendar from \"../../common/calendar\";\n\nconst Calendar = ({ repository, auth }) => {\n  const location = useLocation();\n  const result =\n    location.state.result === undefined ? \"\" : parseInt(location.state.result);\n  const userId = localStorage.getItem(\"token\")\n    ? localStorage.getItem(\"token\")\n    : location.state.userId;\n\n  const formRef = useRef();\n  const countDay = [];\n  const today = MakeCalendar.today.getDate();\n  let yy = MakeCalendar.today.getFullYear();\n  let mm = MakeCalendar.today.getMonth();\n  let todayMonth = MakeCalendar.monList[mm];\n  let currentMonth = MakeCalendar.monList[mm];\n  let firstDay = MakeCalendar.getFirstDay(yy, mm);\n  let lastDay = MakeCalendar.getLastDay(yy, mm);\n  let setFirstDay = firstDay.getDay();\n\n  const [stateCountDay, setStateCountDay] = useState(countDay);\n  const [stateCurrentMonth, setStateCurrentMonth] = useState(currentMonth);\n  const [stateYear, setStateYear] = useState(yy);\n\n  const [clickedDate, setClickedDate] = useState(parseInt(today));\n  const [clickedMonth, setClickedMonth] = useState(currentMonth);\n\n  const [breakfastValue, setBreakfastValue] = useState(0);\n  const [lunchValue, setLunchValue] = useState(0);\n  const [dinnerValue, setDinnerValue] = useState(0);\n  const [currentCal, setCurrentCal] = useState(0);\n\n  const [stateClickDate, setStateClickDate] = useState([]);\n\n  const onClickDate = (_clickDate, _clickmonth) => {\n    setClickedDate(parseInt(_clickDate));\n    setClickedMonth(_clickmonth);\n    setLunchValue(0);\n    setBreakfastValue(0);\n    setDinnerValue(0);\n    formRef.current.reset();\n  };\n  const clickResultBtn = (res, _clickedDate, _clickedMonth) => {\n    let filterItem = stateClickDate.filter(\n      (obj) => obj.date !== _clickedDate || obj.month !== _clickedMonth\n    );\n    let concatItem = filterItem.concat({\n      date: parseInt(clickedDate),\n      month: clickedMonth,\n      resultCal: res,\n    });\n    setStateClickDate(concatItem);\n    setBreakfastValue(0);\n    setLunchValue(0);\n    setDinnerValue(0);\n\n    repository.saveData(userId, concatItem);\n  };\n  const onChangeBreakfast = (cal) => {\n    setBreakfastValue(parseInt(cal));\n  };\n  const onChangeLunch = (cal) => {\n    setLunchValue(parseInt(cal));\n  };\n  const onChangeDinner = (cal) => {\n    setDinnerValue(parseInt(cal));\n  };\n\n  const clickPrevMonth = () => {\n    let countDay = [];\n    let prevMonth = MakeCalendar.prevMonth();\n    let yy = prevMonth.getFullYear();\n    let mm = prevMonth.getMonth();\n    let currentMonth = MakeCalendar.monList[mm];\n\n    let firstDay = MakeCalendar.getFirstDay(yy, mm);\n    let lastDay = MakeCalendar.getLastDay(yy, mm);\n    let setFirstDay = firstDay.getDay();\n\n    handleCountDay(countDay, setFirstDay, lastDay);\n\n    setStateCountDay(countDay);\n    setStateCurrentMonth(currentMonth);\n    setStateYear(yy);\n  };\n\n  const clickNextMonth = useCallback(() => {\n    let countDay = [];\n    let nextMonth = MakeCalendar.nextMonth();\n    let yy = nextMonth.getFullYear();\n    let mm = nextMonth.getMonth();\n    let currentMonth = MakeCalendar.monList[mm];\n\n    let firstDay = MakeCalendar.getFirstDay(yy, mm);\n    let lastDay = MakeCalendar.getLastDay(yy, mm);\n    let setFirstDay = firstDay.getDay();\n\n    handleCountDay(countDay, setFirstDay, lastDay);\n\n    setStateCountDay(countDay);\n    setStateCurrentMonth(currentMonth);\n    setStateYear(yy);\n  }, []);\n\n  const handleCountDay = (_array, _firstDay, _lastDay) => {\n    for (let j = 0; j < _firstDay; j++) {\n      _array.push(\"\");\n    }\n    for (let i = 1; i < _lastDay.getDate() + 1; i++) {\n      _array.push(i);\n    }\n  };\n\n  const saveUser = (data) => {\n    if (data === null) return false;\n    setStateClickDate(data);\n  };\n  handleCountDay(countDay, setFirstDay, lastDay);\n\n  useEffect(() => {\n    setCurrentCal(breakfastValue + lunchValue + dinnerValue);\n  });\n\n  useEffect(() => {\n    repository.loadUser(userId, saveUser);\n  }, [repository]);\n\n  return (\n    <section className={styles.container}>\n      <Header auth={auth} />\n      <div className={styles.dateContainer}>\n        <ClickDate\n          result={result}\n          clickedDate={clickedDate}\n          currentCal={currentCal}\n          onChangeBreakfast={onChangeBreakfast}\n          onChangeLunch={onChangeLunch}\n          onChangeDinner={onChangeDinner}\n          clickedMonth={clickedMonth}\n          clickResultBtn={clickResultBtn}\n          formRef={formRef}\n        />\n        <ShowDate\n          onClickDate={onClickDate}\n          result={result}\n          currentCal={currentCal}\n          todayMonth={todayMonth}\n          clickPrevMonth={clickPrevMonth}\n          clickNextMonth={clickNextMonth}\n          stateCurrentMonth={stateCurrentMonth}\n          stateYear={stateYear}\n          stateCountDay={stateCountDay}\n          stateClickDate={stateClickDate}\n        />\n      </div>\n      <Footer />\n    </section>\n  );\n};\n\nexport default Calendar;\n","C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx",["85","86","87","88","89"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Header from \"../header/header\";\r\n\r\nconst Login = ({ auth, repository }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const naverRef = useRef();\r\n\r\n  const goToHome = (userId) => {\r\n    history.push({\r\n      pathname: \"/Home\",\r\n      state: { userId: userId },\r\n    });\r\n  };\r\n  const clickGoogle = () => {\r\n    auth.googleAuth().then((res) => goToHome(res.user.uid));\r\n  };\r\n\r\n  const clickKakao = (e) => {\r\n    auth.loginKakao();\r\n  };\r\n  const clickNaver = (e) => {\r\n    e.preventDefault();\r\n    naverRef.current.firstChild.click();\r\n  };\r\n\r\n  const getNaverToken = () => {\r\n    if (!location.hash) return;\r\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\r\n    if (token) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onClickNaver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.initializeNaverLogin();\r\n    getNaverToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthChange((user) => {\r\n      user && goToHome(user.uid);\r\n    });\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    const code = new URLSearchParams(location.search).get(\"code\");\r\n    let kakaoToken;\r\n    if (code === undefined) {\r\n      return false;\r\n    }\r\n    auth.fetchToken(code).then((res) => goToHome(res.id));\r\n  }, []);\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.loginCotaniner}>\r\n        <Header />\r\n        <div className={styles.imgBox}>\r\n          <img src=\"./img/1.jpg\" alt=\"workout\" />\r\n        </div>\r\n        <div className={styles.btnBox}>\r\n          <button onClick={clickGoogle} className={styles.btn}>\r\n            Google\r\n          </button>\r\n          <button onClick={clickKakao} className={styles.btn}>\r\n            Kakao\r\n          </button>\r\n          <button onClick={clickNaver} className={styles.btn}>\r\n            Naver\r\n          </button>\r\n          <div\r\n            id=\"naverIdLogin\"\r\n            ref={naverRef}\r\n            onClick={onClickNaver}\r\n            className={styles.naverLogin}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js",[],["90","91"],"C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx",["92","93"],"import React, { useRef, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./home.module.css\";\r\n\r\nconst Home = ({ auth }) => {\r\n  const heightRef = useRef();\r\n  const weightRef = useRef();\r\n  const signRef = useRef();\r\n  const resultRef = useRef();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [height, setHeight] = useState();\r\n  const [commonWeight, setCommonWeight] = useState();\r\n  const [sign, setSign] = useState();\r\n  const [weight, setWeight] = useState();\r\n  const [result, setResult] = useState();\r\n\r\n  const handleHeight = (e) => {\r\n    heightRef.current.innerText = `표준 체중은 ${\r\n      (e.target.value - 100) * 0.9\r\n    } 입니다.`;\r\n    setCommonWeight((e.target.value - 100) * 0.9);\r\n    setHeight(e.target.value);\r\n  };\r\n  const handleWeight = (e) => {\r\n    console.log(commonWeight);\r\n    if (commonWeight == undefined) {\r\n      weightRef.current.innerText = \"키를 먼저 입력해주세요 !\";\r\n      return false;\r\n    }\r\n    setWeight(e.target.value);\r\n    weightRef.current.innerText = `비만도는 ${\r\n      ((e.target.value - commonWeight) / e.target.value) * 100\r\n    }% 입니다. `;\r\n  };\r\n  const handleSign = (e) => {\r\n    setSign(e.target.value);\r\n    signRef.current.innerText = `하루 권장 칼로리는 ${\r\n      commonWeight * e.target.value\r\n    }칼로리 입니다.`;\r\n  };\r\n  const handleResult = (e) => {\r\n    setResult(e.target.value);\r\n  };\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (result == undefined) {\r\n      resultRef.current.innerText = \"하루 칼로리를 입력해주세요 !\";\r\n      return false;\r\n    }\r\n    history.push({\r\n      pathname: \"/Calendar\",\r\n      state: { result: result, userId: location.state.userId },\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.box}>\r\n        <Header auth={auth} />\r\n        <form className={styles.itemForm}>\r\n          <h3 className={styles.title}>하루 권장 칼로리 계산하기</h3>\r\n          <div className={styles.itemContainer}>\r\n            <p>키(cm) </p>\r\n            <input\r\n              type=\"number\"\r\n              value={height}\r\n              onChange={handleHeight}\r\n              name=\"height\"\r\n            />\r\n            <p ref={heightRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>몸무게(kg)</p>\r\n            <input\r\n              type=\"number\"\r\n              value={weight}\r\n              onChange={handleWeight}\r\n              name=\"weight\"\r\n            />\r\n            <p ref={weightRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>활동지수</p>\r\n            <p className={styles.sign}>\r\n              앉아서 주로 생활(일반사무,관리) 가벼운 움직임 25~30\r\n            </p>\r\n            <p className={styles.sign}>\r\n              규칙적인 생활도 보통의 활동량을 가진 경우 30~35\r\n            </p>\r\n            <p className={styles.sign}>\r\n              육체 노동 등 평소 신체 활동량이 많은 경우 40\r\n            </p>\r\n            <input\r\n              type=\"number\"\r\n              value={sign}\r\n              onChange={handleSign}\r\n              name=\"sign\"\r\n            />\r\n            <p ref={signRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>원하는 하루 칼로리</p>\r\n            <input\r\n              type=\"number\"\r\n              value={result}\r\n              onChange={handleResult}\r\n              name=\"result\"\r\n            />\r\n            <p className={styles.conference}>\r\n              1kg을 감량하기 위해서는 7000칼로리를 줄여야 한다.\r\n            </p>\r\n            <p className={styles.conference}>\r\n              급격한 다이어트는 건강의 무리가 되므로 보통 일주일에 0.5kg을\r\n              권장한다.\r\n            </p>\r\n            <p ref={resultRef} className={styles.resultSub}></p>\r\n          </div>\r\n          <button className={styles.btn} onClick={clickSubmit}>\r\n            제출\r\n          </button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\USER\\react_calendar\\src\\App.js",[],["94","95"],"C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx",["96"],"import React, { memo, useCallback } from \"react\";\r\nimport styles from \"./header.module.css\";\r\nimport { faHippo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = memo(({ auth }) => {\r\n  const history = useHistory();\r\n  const onClickSignOut = useCallback(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      localStorage.removeItem(\"token\");\r\n      history.push(\"/\");\r\n    } else {\r\n      auth\r\n        .signOut()\r\n        .then(() => {\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  });\r\n  return (\r\n    <div className={styles.logo}>\r\n      {auth && (\r\n        <button className={styles.singOutBtn} onClick={onClickSignOut}>\r\n          Sign Out\r\n        </button>\r\n      )}\r\n      <FontAwesomeIcon icon={faHippo} />\r\n      <span>Diet Calendar</span>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js",[],"C:\\Users\\USER\\react_calendar\\src\\index.js",[],["97","98"],"C:\\Users\\USER\\react_calendar\\src\\service\\repository.js",[],["99","100"],"C:\\Users\\USER\\react_calendar\\src\\service\\auth.js",[],"C:\\Users\\USER\\react_calendar\\src\\component\\makeDateList\\makeDateList.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\linkButton\\linkButton.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\slideCalendar\\slideCalendar.jsx",["101"],"import { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { memo, useCallback } from \"react\";\r\nimport styles from \"./slideCalendar.module.css\";\r\n\r\nconst SlideCalendar = memo(\r\n  ({ stateCurrentMonth, stateYear, clickNextMonth, clickPrevMonth }) => {\r\n    return (\r\n      <div className={styles.title}>\r\n        <FontAwesomeIcon icon={faArrowLeft} onClick={clickPrevMonth} />\r\n        <span>{stateCurrentMonth}</span>\r\n        <span>{stateYear}</span>\r\n        <FontAwesomeIcon icon={faArrowRight} onClick={clickNextMonth} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SlideCalendar;\r\n",["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":128,"column":3,"nodeType":"110","endLine":128,"endColumn":12,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":134,"column":6,"nodeType":"113","endLine":134,"endColumn":18,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":36,"nodeType":"110","messageId":"117","endLine":1,"endColumn":44},{"ruleId":"108","severity":1,"message":"118","line":44,"column":6,"nodeType":"113","endLine":44,"endColumn":8,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"120","line":50,"column":6,"nodeType":"113","endLine":50,"endColumn":12,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":54,"column":9,"nodeType":"110","messageId":"117","endLine":54,"endColumn":19},{"ruleId":"108","severity":1,"message":"123","line":59,"column":6,"nodeType":"113","endLine":59,"endColumn":8,"suggestions":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":30,"column":22,"nodeType":"129","messageId":"130","endLine":30,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":50,"column":16,"nodeType":"129","messageId":"130","endLine":50,"endColumn":18},{"ruleId":"104","replacedBy":"131"},{"ruleId":"106","replacedBy":"132"},{"ruleId":"108","severity":1,"message":"133","line":9,"column":26,"nodeType":"110","endLine":9,"endColumn":37},{"ruleId":"104","replacedBy":"134"},{"ruleId":"106","replacedBy":"135"},{"ruleId":"104","replacedBy":"136"},{"ruleId":"106","replacedBy":"137"},{"ruleId":"115","severity":1,"message":"138","line":3,"column":23,"nodeType":"110","messageId":"117","endLine":3,"endColumn":34},{"ruleId":"104","replacedBy":"139"},{"ruleId":"106","replacedBy":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCurrentCal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [breakfastValue, lunchValue, dinnerValue] as a second argument to the useEffect Hook.","Identifier",["143"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'useState' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'auth' and 'getNaverToken'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'goToHome'. Either include it or remove the dependency array.",["146"],"'kakaoToken' is defined but never used.","React Hook useEffect has missing dependencies: 'auth', 'goToHome', and 'location.search'. Either include them or remove the dependency array.",["147"],["141"],["142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["141"],["142"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["141"],["142"],["141"],["142"],"'useCallback' is defined but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Add dependencies array: [breakfastValue, lunchValue, dinnerValue]",{"range":"158","text":"159"},"Update the dependencies array to be: [repository, userId]",{"range":"160","text":"161"},"Update the dependencies array to be: [auth, getNaverToken]",{"range":"162","text":"163"},"Update the dependencies array to be: [auth, goToHome]",{"range":"164","text":"165"},"Update the dependencies array to be: [auth, goToHome, location.search]",{"range":"166","text":"167"},[4161,4161],", [breakfastValue, lunchValue, dinnerValue]",[4233,4245],"[repository, userId]",[1076,1078],"[auth, getNaverToken]",[1189,1195],"[auth, goToHome]",[1435,1437],"[auth, goToHome, location.search]"]