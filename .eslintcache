[{"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx":"1","C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx":"2","C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx":"3","C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx":"4","C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx":"5","C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js":"6","C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx":"7","C:\\Users\\USER\\react_calendar\\src\\App.js":"8","C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx":"9","C:\\Users\\USER\\react_calendar\\src\\component\\button\\button.jsx":"10","C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx":"11","C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js":"12"},{"size":1668,"mtime":1613984437214,"results":"13","hashOfConfig":"14"},{"size":569,"mtime":1613984523723,"results":"15","hashOfConfig":"14"},{"size":1827,"mtime":1613992557779,"results":"16","hashOfConfig":"14"},{"size":1356,"mtime":1613991781881,"results":"17","hashOfConfig":"14"},{"size":1209,"mtime":1613493196969,"results":"18","hashOfConfig":"14"},{"size":577,"mtime":1613964450117,"results":"19","hashOfConfig":"14"},{"size":3847,"mtime":1613493236678,"results":"20","hashOfConfig":"14"},{"size":605,"mtime":1613978459356,"results":"21","hashOfConfig":"14"},{"size":402,"mtime":1613492769907,"results":"22","hashOfConfig":"14"},{"size":317,"mtime":1612263407070,"results":"23","hashOfConfig":"14"},{"size":229,"mtime":1613492793113,"results":"24","hashOfConfig":"14"},{"size":415,"mtime":1612260763461,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"12ka7mz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx",["53","54"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./showDate.module.css\";\r\nimport MakeDate from \"../makeDate/makeDate\";\r\n\r\nconst ShowDate = ({ onClickDate, MakeCalendar }) => {\r\n  const monthRef = useRef();\r\n  const yearRef = useRef();\r\n\r\n  let countDay = [];\r\n  const day = MakeCalendar.day;\r\n\r\n  let yy = MakeCalendar.today.getFullYear();\r\n  let mm = MakeCalendar.today.getMonth();\r\n  let currentMonth = MakeCalendar.monList[mm];\r\n  let firstDay = MakeCalendar.getFirstDay(yy, mm);\r\n  let lastDay = MakeCalendar.getLastDay(yy, mm);\r\n  let setFirstDay = firstDay.getDay();\r\n\r\n  for (let j = 0; j < setFirstDay; j++) {\r\n    countDay.push(\"\");\r\n  }\r\n  for (let i = 1; i < lastDay.getDate() + 1; i++) {\r\n    countDay.push(i);\r\n  }\r\n\r\n  const loadDate = (fullDate) => {\r\n    let yy = fullDate.getFullYear();\r\n    let mm = fullDate.getMonth();\r\n    monthRef.current.innerText = currentMonth;\r\n    yearRef.current.innerText = yy;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDate(MakeCalendar.today);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.title}>\r\n        <span ref={monthRef}></span>\r\n        <span ref={yearRef}></span>\r\n      </div>\r\n      <ul className={styles.dayContainer}>\r\n        {day.map((item) => (\r\n          <li>{item}</li>\r\n        ))}\r\n      </ul>\r\n      <ul className={styles.makeDateContainer}>\r\n        {countDay.map((date, index) => (\r\n          <MakeDate\r\n            date={date}\r\n            onClickDate={onClickDate}\r\n            key={index}\r\n            currentMonth={currentMonth}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowDate;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx",["55"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./makeDate.module.css\";\r\n\r\nconst MakeDate = ({ date, onClickDate, currentMonth }) => {\r\n  return (\r\n    <li className={styles.date}>\r\n      <Link\r\n        to={{\r\n          pathname: `/Calendar/${currentMonth}/${date}`,\r\n          state: { date },\r\n        }}\r\n        className={styles.title}\r\n        onClick={onClickDate}\r\n      >\r\n        {date}\r\n      </Link>\r\n      <span className={styles.cal}>+500Cal</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MakeDate;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx",["56","57"],"C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx",["58"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./clickDate.module.css\";\r\n\r\nconst ClickDate = ({\r\n  result,\r\n  clickedDate,\r\n  currentCal,\r\n  onChangeBreakfast,\r\n  onChangeDinner,\r\n  onChangeLunch,\r\n}) => {\r\n  const changeBreakfast = (e) => {\r\n    onChangeBreakfast(e.target.value);\r\n  };\r\n  const changeLunch = (e) => {\r\n    onChangeLunch(e.target.value);\r\n  };\r\n  const changeDinner = (e) => {\r\n    onChangeDinner(e.target.value);\r\n  };\r\n  useEffect(() => {});\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.day}>February {clickedDate}</h2>\r\n      <div className={styles.itemContainer}>\r\n        <span>아침(cal): </span>\r\n        <input type=\"number\" onChange={changeBreakfast} />\r\n      </div>\r\n      <div className={styles.itemContainer}>\r\n        <span>점심(cal): </span>\r\n        <input type=\"number\" onChange={changeLunch} />\r\n      </div>\r\n      <div className={styles.itemContainer}>\r\n        <span>저녁(cal): </span>\r\n        <input type=\"number\" onChange={changeDinner} />\r\n      </div>\r\n      <h3>현재 칼로리: {currentCal}cal</h3>\r\n      <h3>하루 칼로리: {result}cal</h3>\r\n      <Link to=\"/Home\" className={styles.link}>\r\n        하루 칼로리 설정하기\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClickDate;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx",["59","60","61"],"C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js",[],"C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx",["62"],"C:\\Users\\USER\\react_calendar\\src\\App.js",[],"C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\button\\button.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":36,"nodeType":"65","messageId":"66","endLine":1,"endColumn":44},{"ruleId":"63","severity":1,"message":"67","line":28,"column":9,"nodeType":"65","messageId":"66","endLine":28,"endColumn":11},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":13,"column":9,"nodeType":"65","messageId":"66","endLine":13,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":33,"column":3,"nodeType":"65","endLine":33,"endColumn":12,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"72","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"73","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":25},{"ruleId":"63","severity":1,"message":"74","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":14},{"ruleId":"63","severity":1,"message":"75","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'mm' is assigned a value but never used.","'currentMonth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCurrentCal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [breakfastValue, lunchValue, dinnerValue] as a second argument to the useEffect Hook.",["76"],"'faHippo' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Footer' is defined but never used.","'resultRef' is assigned a value but never used.",{"desc":"77","fix":"78"},"Add dependencies array: [breakfastValue, lunchValue, dinnerValue]",{"range":"79","text":"80"},[1219,1219],", [breakfastValue, lunchValue, dinnerValue]"]