[{"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx":"1","C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx":"2","C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx":"3","C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx":"4","C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx":"5","C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js":"6","C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx":"7","C:\\Users\\USER\\react_calendar\\src\\App.js":"8","C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx":"9","C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx":"10","C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js":"11","C:\\Users\\USER\\react_calendar\\src\\index.js":"12","C:\\Users\\USER\\react_calendar\\src\\service\\repository.js":"13","C:\\Users\\USER\\react_calendar\\src\\service\\auth.js":"14"},{"size":1487,"mtime":1614308730431,"results":"15","hashOfConfig":"16"},{"size":727,"mtime":1614309630707,"results":"17","hashOfConfig":"16"},{"size":4053,"mtime":1614309698597,"results":"18","hashOfConfig":"16"},{"size":1641,"mtime":1614309704161,"results":"19","hashOfConfig":"16"},{"size":2335,"mtime":1614154360870,"results":"20","hashOfConfig":"16"},{"size":820,"mtime":1614308745901,"results":"21","hashOfConfig":"16"},{"size":4263,"mtime":1614236918752,"results":"22","hashOfConfig":"16"},{"size":665,"mtime":1614153142571,"results":"23","hashOfConfig":"16"},{"size":795,"mtime":1614237350795,"results":"24","hashOfConfig":"16"},{"size":229,"mtime":1613492793113,"results":"25","hashOfConfig":"16"},{"size":416,"mtime":1614069234901,"results":"26","hashOfConfig":"16"},{"size":400,"mtime":1614153299234,"results":"27","hashOfConfig":"16"},{"size":200,"mtime":1614154260777,"results":"28","hashOfConfig":"16"},{"size":1264,"mtime":1614154292470,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ka7mz",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\Users\\USER\\react_calendar\\src\\component\\showDate\\showDate.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\makeDate\\makeDate.jsx",["66"],"import React, { useState } from \"react\";\r\nimport styles from \"./makeDate.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst MakeDate = ({\r\n  date,\r\n  onClickDate,\r\n  stateCurrentMonth,\r\n  result,\r\n  currentCal,\r\n  todayMonth,\r\n}) => {\r\n  const markToday =\r\n    stateCurrentMonth === todayMonth ? new Date().getDate() : false;\r\n\r\n  const clickDate = (e) => {\r\n    onClickDate(e.target.innerText, stateCurrentMonth);\r\n  };\r\n  return (\r\n    <li className={styles.date}>\r\n      <p\r\n        className={cx(styles.title, markToday === date ? styles.today : false)}\r\n        onClick={clickDate}\r\n      >\r\n        {date}\r\n      </p>\r\n      <span className={styles.cal}>{result}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MakeDate;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\calendar\\calendar.jsx",["67"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ClickDate from \"../clickDate/clickDate\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport styles from \"./calendar.module.css\";\nimport ShowDate from \"../showDate/showDate\";\nimport MakeCalendar from \"../../common/calendar\";\n\nconst Calendar = ({ repository, auth }) => {\n  const location = useLocation();\n  const result =\n    location.state.result === undefined ? \"\" : location.state.result;\n\n  const countDay = [];\n  let yy = MakeCalendar.today.getFullYear();\n  let mm = MakeCalendar.today.getMonth();\n  let todayMonth = MakeCalendar.monList[mm];\n  let currentMonth = MakeCalendar.monList[mm];\n  let firstDay = MakeCalendar.getFirstDay(yy, mm);\n  let lastDay = MakeCalendar.getLastDay(yy, mm);\n  let setFirstDay = firstDay.getDay();\n\n  const [stateCountDay, setStateCountDay] = useState(countDay);\n  const [stateCurrentMonth, setStateCurrentMonth] = useState(currentMonth);\n  const [stateYear, setStateYear] = useState(yy);\n\n  const [clickedDate, setClickedDate] = useState();\n  const [clickedMonth, setClickedMonth] = useState();\n  const [currentCal, setCurrentCal] = useState(0);\n  const [breakfastValue, setBreakfastValue] = useState(0);\n  const [lunchValue, setLunchValue] = useState(0);\n  const [dinnerValue, setDinnerValue] = useState(0);\n\n  const onClickDate = (_clickDate, _clickmonth) => {\n    setClickedDate(_clickDate);\n    setClickedMonth(_clickmonth);\n  };\n  const onChangeBreakfast = (cal) => {\n    setBreakfastValue(parseInt(cal));\n  };\n  const onChangeLunch = (cal) => {\n    setLunchValue(parseInt(cal));\n  };\n  const onChangeDinner = (cal) => {\n    setDinnerValue(parseInt(cal));\n  };\n\n  const clickPrevMonth = () => {\n    let countDay = [];\n    let prevMonth = MakeCalendar.prevMonth();\n    let yy = prevMonth.getFullYear();\n    let mm = prevMonth.getMonth();\n    let currentMonth = MakeCalendar.monList[mm];\n\n    let firstDay = MakeCalendar.getFirstDay(yy, mm);\n    let lastDay = MakeCalendar.getLastDay(yy, mm);\n    let setFirstDay = firstDay.getDay();\n\n    handleCountDay(countDay, setFirstDay, lastDay);\n\n    setStateCountDay(countDay);\n    setStateCurrentMonth(currentMonth);\n    setStateYear(yy);\n  };\n\n  const clickNextMonth = () => {\n    let countDay = [];\n    let nextMonth = MakeCalendar.nextMonth();\n    let yy = nextMonth.getFullYear();\n    let mm = nextMonth.getMonth();\n    let currentMonth = MakeCalendar.monList[mm];\n\n    let firstDay = MakeCalendar.getFirstDay(yy, mm);\n    let lastDay = MakeCalendar.getLastDay(yy, mm);\n    let setFirstDay = firstDay.getDay();\n\n    handleCountDay(countDay, setFirstDay, lastDay);\n\n    setStateCountDay(countDay);\n    setStateCurrentMonth(currentMonth);\n    setStateYear(yy);\n  };\n\n  const handleCountDay = (_array, _firstDay, _lastDay) => {\n    for (let j = 0; j < _firstDay; j++) {\n      _array.push(\"\");\n    }\n    for (let i = 1; i < _lastDay.getDate() + 1; i++) {\n      _array.push(i);\n    }\n  };\n\n  handleCountDay(countDay, setFirstDay, lastDay);\n\n  useEffect(() => {\n    setCurrentCal(breakfastValue + lunchValue + dinnerValue);\n  });\n  return (\n    <section className={styles.container}>\n      <Header auth={auth} />\n      <div className={styles.dateContainer}>\n        <ClickDate\n          result={result}\n          clickedDate={clickedDate}\n          currentCal={currentCal}\n          onChangeBreakfast={onChangeBreakfast}\n          onChangeLunch={onChangeLunch}\n          onChangeDinner={onChangeDinner}\n          MakeCalendar={MakeCalendar}\n          clickedMonth={clickedMonth}\n        />\n        <ShowDate\n          onClickDate={onClickDate}\n          result={result}\n          currentCal={currentCal}\n          todayMonth={todayMonth}\n          clickPrevMonth={clickPrevMonth}\n          clickNextMonth={clickNextMonth}\n          stateCurrentMonth={stateCurrentMonth}\n          stateYear={stateYear}\n          stateCountDay={stateCountDay}\n        />\n      </div>\n      <Footer />\n    </section>\n  );\n};\n\nexport default Calendar;\n","C:\\Users\\USER\\react_calendar\\src\\component\\clickDate\\clickDate.jsx",["68"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./clickDate.module.css\";\r\n\r\nconst ClickDate = ({\r\n  result,\r\n  clickedDate,\r\n  currentCal,\r\n  onChangeBreakfast,\r\n  onChangeDinner,\r\n  onChangeLunch,\r\n  MakeCalendar,\r\n  clickedMonth,\r\n}) => {\r\n  if (clickedMonth === undefined) {\r\n    let mm = MakeCalendar.today.getMonth();\r\n    clickedMonth = MakeCalendar.monList[mm];\r\n  }\r\n  if (clickedDate === undefined) {\r\n    clickedDate = MakeCalendar.today.getDate();\r\n  }\r\n\r\n  const changeBreakfast = (e) => {\r\n    onChangeBreakfast(e.target.value);\r\n  };\r\n  const changeLunch = (e) => {\r\n    onChangeLunch(e.target.value);\r\n  };\r\n  const changeDinner = (e) => {\r\n    onChangeDinner(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.day}>\r\n        <span>{clickedMonth}</span>\r\n        <span>{clickedDate}</span>\r\n      </h2>\r\n      <div className={styles.itemContainer}>\r\n        <span>아침(cal): </span>\r\n        <input type=\"number\" onChange={changeBreakfast} />\r\n      </div>\r\n      <div className={styles.itemContainer}>\r\n        <span>점심(cal): </span>\r\n        <input type=\"number\" onChange={changeLunch} />\r\n      </div>\r\n      <div className={styles.itemContainer}>\r\n        <span>저녁(cal): </span>\r\n        <input type=\"number\" onChange={changeDinner} />\r\n      </div>\r\n      <h3>현재 칼로리: {currentCal}cal</h3>\r\n      <h3>하루 칼로리: {result}cal</h3>\r\n      <Link to=\"/Home\" className={styles.link}>\r\n        하루 칼로리 설정하기\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClickDate;\r\n","C:\\Users\\USER\\react_calendar\\src\\component\\login\\login.jsx",["69","70"],"import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Header from \"../header/header\";\r\n\r\nconst Login = ({ auth }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const naverRef = useRef();\r\n\r\n  const goToHome = (userId) => {\r\n    history.push({\r\n      pathname: \"/Home\",\r\n      state: { userId: userId },\r\n    });\r\n  };\r\n  const clickGoogle = () => {\r\n    auth.googleAuth().then((res) => goToHome(res.user.uid));\r\n  };\r\n  const clickGithub = () => {\r\n    auth.githubAuth().then((res) => goToHome(res.user.uid));\r\n  };\r\n  const clickKakao = () => {\r\n    auth.loginKakao(goToHome);\r\n  };\r\n  const clickNaver = (e) => {\r\n    e.preventDefault();\r\n    naverRef.current.firstChild.click();\r\n  };\r\n\r\n  const getNaverToken = async () => {\r\n    if (!location.hash) return;\r\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\r\n\r\n    await fetch(\"/User/Naver\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resjson) => goToHome(resjson));\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.initializeNaverLogin();\r\n    getNaverToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthChange((user) => {\r\n      user && goToHome(user.uid);\r\n    });\r\n  }, [auth]);\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.loginCotaniner}>\r\n        <Header />\r\n        <div className={styles.imgBox}>\r\n          <img src=\"./img/1.jpg\" alt=\"workout\" />\r\n        </div>\r\n        <div className={styles.btnBox}>\r\n          <button onClick={clickGoogle} className={styles.btn}>\r\n            Google\r\n          </button>\r\n          <button onClick={clickGithub} className={styles.btn}>\r\n            Github\r\n          </button>\r\n          <button onClick={clickKakao} className={styles.btn}>\r\n            Kakao\r\n          </button>\r\n          <button onClick={clickNaver} className={styles.btn}>\r\n            Naver\r\n          </button>\r\n          <div\r\n            id=\"naverIdLogin\"\r\n            ref={naverRef}\r\n            className={styles.naverLogin}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",["71","72"],"C:\\Users\\USER\\react_calendar\\src\\common\\calendar.js",[],"C:\\Users\\USER\\react_calendar\\src\\component\\home\\home.jsx",["73","74"],"import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./home.module.css\";\r\n\r\nconst Home = ({ auth }) => {\r\n  const heightRef = useRef();\r\n  const weightRef = useRef();\r\n  const signRef = useRef();\r\n  const resultRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const [height, setHeight] = useState();\r\n  const [commonWeight, setCommonWeight] = useState();\r\n  const [sign, setSign] = useState();\r\n  const [weight, setWeight] = useState();\r\n  const [result, setResult] = useState();\r\n\r\n  const handleHeight = (e) => {\r\n    heightRef.current.innerText = `표준 체중은 ${\r\n      (e.target.value - 100) * 0.9\r\n    } 입니다.`;\r\n    setCommonWeight((e.target.value - 100) * 0.9);\r\n    setHeight(e.target.value);\r\n  };\r\n  const handleWeight = (e) => {\r\n    console.log(commonWeight);\r\n    if (commonWeight == undefined) {\r\n      weightRef.current.innerText = \"키를 먼저 입력해주세요 !\";\r\n      return false;\r\n    }\r\n    setWeight(e.target.value);\r\n    weightRef.current.innerText = `비만도는 ${\r\n      ((e.target.value - commonWeight) / e.target.value) * 100\r\n    }% 입니다. `;\r\n  };\r\n  const handleSign = (e) => {\r\n    setSign(e.target.value);\r\n    signRef.current.innerText = `하루 권장 칼로리는 ${\r\n      commonWeight * e.target.value\r\n    }칼로리 입니다.`;\r\n  };\r\n  const handleResult = (e) => {\r\n    setResult(e.target.value);\r\n  };\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (result == undefined) {\r\n      resultRef.current.innerText = \"하루 칼로리를 입력해주세요 !\";\r\n      return false;\r\n    }\r\n    history.push({\r\n      pathname: \"/Calendar\",\r\n      state: { result: result },\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.box}>\r\n        <Header auth={auth} />\r\n        <form className={styles.itemForm}>\r\n          <h3 className={styles.title}>하루 권장 칼로리 계산하기</h3>\r\n          <div className={styles.itemContainer}>\r\n            <p>키(cm) </p>\r\n            <input\r\n              type=\"number\"\r\n              value={height}\r\n              onChange={handleHeight}\r\n              name=\"height\"\r\n            />\r\n            <p ref={heightRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>몸무게(kg)</p>\r\n            <input\r\n              type=\"number\"\r\n              value={weight}\r\n              onChange={handleWeight}\r\n              name=\"weight\"\r\n            />\r\n            <p ref={weightRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>활동지수</p>\r\n            <p className={styles.sign}>\r\n              앉아서 주로 생활(일반사무,관리) 가벼운 움직임 25~30\r\n            </p>\r\n            <p className={styles.sign}>\r\n              규칙적인 생활도 보통의 활동량을 가진 경우 30~35\r\n            </p>\r\n            <p className={styles.sign}>\r\n              육체 노동 등 평소 신체 활동량이 많은 경우 40\r\n            </p>\r\n            <input\r\n              type=\"number\"\r\n              value={sign}\r\n              onChange={handleSign}\r\n              name=\"sign\"\r\n            />\r\n            <p ref={signRef}></p>\r\n          </div>\r\n          <div className={styles.itemContainer}>\r\n            <p>원하는 하루 칼로리</p>\r\n            <input\r\n              type=\"number\"\r\n              value={result}\r\n              onChange={handleResult}\r\n              name=\"result\"\r\n            />\r\n            <p className={styles.conference}>\r\n              1kg을 감량하기 위해서는 7000칼로리를 줄여야 한다.\r\n            </p>\r\n            <p className={styles.conference}>\r\n              급격한 다이어트는 건강의 무리가 되므로 보통 일주일에 0.5kg을\r\n              권장한다.\r\n            </p>\r\n            <p ref={resultRef} className={styles.resultSub}></p>\r\n          </div>\r\n          <button className={styles.btn} onClick={clickSubmit}>\r\n            제출\r\n          </button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\USER\\react_calendar\\src\\App.js",[],"C:\\Users\\USER\\react_calendar\\src\\component\\header\\header.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\component\\footer\\footer.jsx",[],"C:\\Users\\USER\\react_calendar\\src\\service\\firebase.js",[],"C:\\Users\\USER\\react_calendar\\src\\index.js",[],["75","76"],"C:\\Users\\USER\\react_calendar\\src\\service\\repository.js",[],"C:\\Users\\USER\\react_calendar\\src\\service\\auth.js",["77"],"import firebase from \"./firebase\";\r\nimport Repository from \"./repository\";\r\n\r\nconst { naver } = window;\r\nconst { Kakao } = window;\r\n\r\nconst repository = new Repository();\r\n\r\nclass Auth {\r\n  googleAuth() {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider);\r\n  }\r\n  githubAuth() {\r\n    const githubProvider = new firebase.auth.GithubAuthProvider();\r\n    return firebase.auth().signInWithPopup(githubProvider);\r\n  }\r\n  loginKakao(goToHome) {\r\n    Kakao.Auth.loginForm({\r\n      success: function (authObj) {\r\n        const token = authObj.access_token;\r\n        goToHome(token);\r\n      },\r\n      fail: function (err) {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n  initializeNaverLogin() {\r\n    const naverLogin = new naver.LoginWithNaverId({\r\n      clientId: process.env.NAVER_URL,\r\n      callbackUrl: process.env.NAVER_ID,\r\n      isPopup: true,\r\n      loginButton: { color: \"green\", type: 1, height: 30 },\r\n      callbackHandlke: true,\r\n    });\r\n    naverLogin.init();\r\n  }\r\n\r\n  signOut() {\r\n    return firebase.auth().signOut();\r\n  }\r\n  onAuthChange(goToHome) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      goToHome(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n",{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":96,"column":3,"nodeType":"80","endLine":96,"endColumn":12,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"85","line":49,"column":6,"nodeType":"86","endLine":49,"endColumn":8,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":55,"column":6,"nodeType":"86","endLine":55,"endColumn":12,"suggestions":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":29,"column":22,"nodeType":"96","messageId":"97","endLine":29,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":49,"column":16,"nodeType":"96","messageId":"97","endLine":49,"endColumn":18},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"78","severity":1,"message":"100","line":7,"column":7,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCurrentCal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [breakfastValue, lunchValue, dinnerValue] as a second argument to the useEffect Hook.",["101"],"React Hook useEffect has missing dependencies: 'auth' and 'getNaverToken'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'goToHome'. Either include it or remove the dependency array.",["103"],"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["104"],["105"],"'repository' is assigned a value but never used.",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"no-global-assign","no-unsafe-negation","Add dependencies array: [breakfastValue, lunchValue, dinnerValue]",{"range":"112","text":"113"},"Update the dependencies array to be: [auth, getNaverToken]",{"range":"114","text":"115"},"Update the dependencies array to be: [auth, goToHome]",{"range":"116","text":"117"},[3148,3148],", [breakfastValue, lunchValue, dinnerValue]",[1302,1304],"[auth, getNaverToken]",[1415,1421],"[auth, goToHome]"]