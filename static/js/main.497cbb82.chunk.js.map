{"version":3,"sources":["App.jsx","service/firebase.js","service/repository.js","service/auth.js","index.js"],"names":["App","auth","repository","firebaseConfig","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH","projectId","REACT_APP_FIREBASE_PROJECT_ID","appId","REACT_APP_FIREBASE_APP_ID","firebase","initializeApp","firebaseAuth","firebaseDatabase","database","googleProvider","GoogleAuthProvider","Repository","userId","loadData","ref","on","snapshot","data","val","date","set","remove","update","naver","window","Kakao","Auth","googleAuthProvider","signInWithPopup","authorize","redirectUri","REACT_APP_KAKAO_URL","code","requestOptions","method","redirect","fetch","REACT_APP_KAKAO_KEY","then","res","json","result","headers","Authorization","access_token","token","LoginWithNaverId","clientId","REACT_APP_NAVER_ID","callbackUrl","REACT_APP_NAVER_URL","isPopup","loginButton","color","type","height","callbackHandlke","init","signOut","goToHome","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAyBeA,MAnBf,YACE,OADiC,EAApBC,KAAoB,EAAdC,WAejB,aAbA,CAaA,0B,8CCjBEC,G,YAAiB,CACrBC,OAAQC,sJAAYC,2BACpBC,WAAYF,sJAAYG,wBACxBC,UAAWJ,sJAAYK,8BACvBC,MAAON,sJAAYO,4BAGrBC,IAASC,cAAcX,GAEhB,IAAMY,EAAeF,IAASZ,OACxBe,EAAmBH,IAASI,WAC5BC,EAAiB,IAAIL,IAASZ,KAAKkB,mBCQjCC,E,0IApBEC,EAAQC,G,iFACfN,EACHO,IADG,UACIF,EADJ,UAEHG,GAAG,SAAS,SAACC,GACZ,IAAMC,EAAOD,EAASE,MACtBL,EAASI,M,4KAGAL,EAAQO,G,iFACfZ,EAAiBO,IAAjB,UAAwBF,EAAxB,UAAuCQ,IAAID,G,qIAGxCP,EAAQK,GACjBV,EAAiBO,IAAjB,UAAwBF,EAAxB,WAAwCS,OAAOJ,K,iCAEtCL,EAAQK,GACjBV,EAAiBO,IAAjB,UAAwBF,EAAxB,WAAwCU,OAAOL,O,KCjB3CM,EAAUC,OAAVD,MACAE,EAAUD,OAAVC,MAiEOC,E,qGA7DX,IAAMC,EAAqBlB,EAC3B,OAAOH,EAAasB,gBAAgBD,K,mCAIpCF,EAAMC,KAAKG,UAAU,CACnBC,YAAalC,sJAAYmC,wB,0EAGZC,G,8EACTC,EAAiB,CACrBC,OAAQ,OACRC,SAAU,U,SAECC,MAAM,+EAAD,OAC+DxC,sJAAYyC,oBAD3E,yBAC+GzC,sJAAYmC,oBAD3H,iBACuJC,GACvKC,GAECK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,OAAOL,MAAM,oCAAqC,CAChDF,OAAQ,MACRQ,QAAS,CAAEC,cAAc,SAAD,OAAWF,EAAOG,eAC1CT,SAAU,cAGbG,MAAK,SAACO,GAAD,OAAWA,K,wSAGNT,MAAM,0CAAD,OAC0BxC,sJAAYyC,oBADtC,gCACiFzC,sJAAYmC,sB,sLAI5F,IAAIR,EAAMuB,iBAAiB,CAC5CC,SAAUnD,sJAAYoD,mBACtBC,YAAarD,sJAAYsD,oBACzBC,SAAS,EACTC,YAAa,CAAEC,MAAO,QAASC,KAAM,EAAGC,OAAQ,IAChDC,iBAAiB,IAERC,S,+EAESzB,G,iFACPI,MAAM,sCAAuC,CACxDF,OAAQ,MACRQ,QAAS,CAAEC,cAAc,UAAD,OAAYX,IACpCG,SAAU,WACTG,MAAK,SAACC,GAAD,OAASA,EAAIC,U,0KAIrB,OAAOlC,EAAaoD,Y,mCAETC,GACXrD,EAAasD,oBAAmB,SAACC,GAC/BF,EAASE,U,KCxDTpE,EAAa,IAAIkB,EACjBnB,EAAO,IAAIkC,EAEjBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKxE,KAAMA,EAAMC,WAAYA,MAE/BwE,SAASC,eAAe,W","file":"static/js/main.497cbb82.chunk.js","sourcesContent":["// import { Switch, Route, BrowserRouter } from \"react-router-dom\";\n// import \"./App.css\";\n// import Login from \"./component/login/login\";\n// import Home from \"./component/home/home\";\n// import Calendar from \"./component/calendar/calendar\";\n\nfunction App({ auth, repository }) {\n  return (\n    // <BrowserRouter basename=\"/react-dietCalendar\">\n    //   <Switch>\n    //     <Route exact path=\"/\">\n    //       <Login auth={auth} repository={repository} />\n    //     </Route>\n    //     <Route path=\"/Home\">\n    //       <Home auth={auth} />\n    //     </Route>\n    //     <Route path=\"/Calendar\">\n    //       <Calendar repository={repository} auth={auth} />\n    //     </Route>\n    //   </Switch>\n    // </BrowserRouter>\n    <h2>Hello</h2>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseAuth = firebase.auth();\r\nexport const firebaseDatabase = firebase.database();\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n","import { firebaseDatabase } from \"./firebase\";\r\n\r\nclass Repository {\r\n  async loadUser(userId, loadData) {\r\n    await firebaseDatabase //\r\n      .ref(`${userId}/date`)\r\n      .on(\"value\", (snapshot) => {\r\n        const data = snapshot.val();\r\n        loadData(data);\r\n      });\r\n  }\r\n  async saveData(userId, date) {\r\n    await firebaseDatabase.ref(`${userId}/date`).set(date);\r\n  }\r\n\r\n  deleteData(userId, data) {\r\n    firebaseDatabase.ref(`${userId}/date/`).remove(data);\r\n  }\r\n  updateDate(userId, data) {\r\n    firebaseDatabase.ref(`${userId}/date/`).update(data);\r\n  }\r\n}\r\n\r\nexport default Repository;\r\n","import { googleProvider, firebaseAuth } from \"./firebase\";\r\n\r\nconst { naver } = window;\r\nconst { Kakao } = window;\r\n\r\nclass Auth {\r\n  googleAuth() {\r\n    const googleAuthProvider = googleProvider;\r\n    return firebaseAuth.signInWithPopup(googleAuthProvider);\r\n  }\r\n\r\n  loginKakao() {\r\n    Kakao.Auth.authorize({\r\n      redirectUri: process.env.REACT_APP_KAKAO_URL,\r\n    });\r\n  }\r\n  async fetchToken(code) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      redirect: \"follow\",\r\n    };\r\n    return await fetch(\r\n      `https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=${process.env.REACT_APP_KAKAO_KEY}&redirect_uri=${process.env.REACT_APP_KAKAO_URL}&code=${code}`,\r\n      requestOptions\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        return fetch(\"https://kapi.kakao.com/v2/user/me\", {\r\n          method: \"GET\",\r\n          headers: { Authorization: `Beaer ${result.access_token}` },\r\n          redirect: \"follow\",\r\n        });\r\n      }) //\r\n      .then((token) => token);\r\n  }\r\n  async kakaoLogout() {\r\n    return await fetch(\r\n      `kauth.kakao.com/oauth/logout?client_id=${process.env.REACT_APP_KAKAO_KEY}&logout_redirect_uri=${process.env.REACT_APP_KAKAO_URL}`\r\n    );\r\n  }\r\n  initializeNaverLogin() {\r\n    const naverLogin = new naver.LoginWithNaverId({\r\n      clientId: process.env.REACT_APP_NAVER_ID,\r\n      callbackUrl: process.env.REACT_APP_NAVER_URL,\r\n      isPopup: false,\r\n      loginButton: { color: \"green\", type: 1, height: 30 },\r\n      callbackHandlke: true,\r\n    });\r\n    naverLogin.init();\r\n  }\r\n  async fetchNaverToken(code) {\r\n    return await fetch(\"https://openapi.naver.com/v1/nid/me\", {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${code}` },\r\n      redirect: \"follow\",\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  signOut() {\r\n    return firebaseAuth.signOut();\r\n  }\r\n  onAuthChange(goToHome) {\r\n    firebaseAuth.onAuthStateChanged((user) => {\r\n      goToHome(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport Repository from \"./service/repository\";\nimport Auth from \"./service/auth\";\n\nconst repository = new Repository();\nconst auth = new Auth();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App auth={auth} repository={repository} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}